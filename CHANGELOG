Predicate CHANGELOG

TODO: add explanation of expressions equality with examples, similar to
      bool QDomNode::operator== ( const QDomNode & n ) const

2012-06-27
Predicate
*Add KexiDB fix: Fix deep copying of query schema and ORDER BY structures
**This removes crashes related, e.g. in reports based on queries with joins
**(2012-03-13 calligra master commit 9408a8234ac60)
CCBUG:246928
CCBUG:281737
*Add KexiDB fix: Properly deep-copy query asterisks when cloning query objects
**This fixes crash for reports based on queries
**(2012-03-18 calligra master commit f0992d35f4ab9)
CCBUG:246928
*Add KexiDB fix: Fix the filename extension when loading on different platforms
**(2012-03-19 calligra master commit 4e465d91b208e)
*Add KexiDB fix: QuerySchema: removed memory leak
**(2012-03-22 calligra master commit a99069676e4e)
*Add KexiDB fix: AlterTableHandler: remove memory leak
**(2012-03-22 calligra master commit 8081997afd0e)
*Add KexiDB fix: Fix compilation for clang
**Clang has some additional restriction, patch by Matthew Rezny
**(2012-04-20 calligra master commit c804712c97b2)
*Add KexiDB fix: Add sqlite's message to the "Could not load SQLite extension" warning
**(2012-04-23 calligra master commit 74642dd2ee6c)
*Add KexiDB fix: Fix crashes when saving query design
**(2012-05-03 calligra master commit 0fefd8dbbe33)
**put DESC/ASC after COLLATE section, not before (needed at least for sqlite driver)
**fixed crash because of invalid deletion order of query structures
**fixed crash because of invalid deletion relationship structures
CCBUG:298197
*Krazy fixes: removed 'const' refs in public classes [constref]
*Finally removed the libpqxx-based driver, libpq-based one is now official
*Add KexiDB fix: Remove limits for Text data type, leave as option
**Now by default there are no limits in Text data type
**(2012-06-06 calligra master commit 094bc376058c)
CCBUG:301277

2012-06-25..26
SQLite Driver
*Add KexiDB fix: Ported database compacting code to Predicate that uses system SQLite
**(2012-02-02 calligra master commit 42ffb1c08d74b)
CCBUG:293548
TODO: SQLite Vacuum not tested (but predicate_sqlite3_dump works)
TODO: add test for SQLite Vacuum
*Add KexiDB fix: Allow to cancel database compacting; remove temp. file if needed
**(2012-03-02 calligra master commit d4d64077d66)
*Add KexiDB fix: Fixed crashes when compacting database fails
**(2012-03-07 calligra master commit 5cdecef8bfe)
*Add KexiDB fix: Fixed error when compacting db opened from recent lists
**(2012-03-07 calligra master commit 9ec3e68ff43)
MySQL Driver
*Add KexiDB fix: Fixed crash in prepared statement execution for inserting data when number of items to insert is smaller than expected; this case could be found when importing CSV data in Kexi with fewer columns specified than expected
**(2012-03-07 calligra master commit 7661374b40c)
CCBUG:279980
CCBUG:254068
PostgreSQL Driver
*Add KexiDB fix: Fixed crash when inserting incomplete rows
**(2012-03-07 calligra master commit 38da0b59e08)
CCBUG:279980
CCBUG:254068

2012-06-20
Predicate
*Add KexiDB fix: Query SQL generated in the Query Designer should be of KEXISQL type
**(2012-01-02 calligra master commit 1072a0f5d)
CCBUG:290354
*Add KexiDB fix: Clean up #includes: use the same style for Qt everywhere, e.g. #include <QObject> instead of #include <qobject.h>
SQLite Driver
*Add KexiDB fix: fixed crash in prepared statement execution for inserting data when number of items to insert is smaller than expected; this case could be found when importing CSV data in Kexi with fewer columns specified than expected
**(2012-02-27 calligra master commit 1e9be96a9e)
CCBUG:279980
*Add KexiDB fix: predicate_sqlite3_dump, based on fragments from SQLite's shell.c (from SQLite 3.7.10)
**(2012-03-02 calligra master commit 983553232e, ca6b463f755060)
CCBUG:293548

2012-05-27
Predicate
*Add KexiDB fix: Use ICU (http://icu-project.org) for high quality collating in unicode text columns using sqlite extension
**(2011-12-20 calligra master commit 8f6f75d5b9ebf048)
CCBUG:278411

2012-05-23
Predicate
*Allow to set debugging for Expression classes in the build options
*Add KexiDB fix: avoid 'invalid read' in code for inserting records into tables
**(2011-12-14 calligra master commit 64eab6eccab72c296)
*Add KexiDB fix: Subqueries in Postgresql must have an alias. Tested with postgres and sqlite.
**(2011-10-19 calligra master commit ea4d2bd4f74922724)

2012-05-22
Predicate
*Field: fix crash - initialize expression before it is use
*Make drivers match 0.0 version of predicate
*Force out-of-source build

2012-05-21
Predicate
*Qt string handling optimizations added
**-DQT_USE_QSTRINGBUILDER -DQT_NO_CAST_TO_ASCII -DQT_NO_CAST_FROM_ASCII
**http://qt-project.org/doc/qt-4.8/qstring.html#more-efficient-string-construction

2012-03-28
Predicate
*fixed functions returning field's type group name and type group string; they were completely broken but probably only GUI was affected

2011-11-23
Predicate
*Port sql keywords list gen. from kexidb; add more renames from kexidb
*Port KexiDB 2 commit 225a51c6ee: exceptions in form const class &var
*Port KexiDB 2 commit e3db10e10: add methods for removing columns from RecordEditBuffer
*Port 'pass a paramameter by reference' fix from KexiDB 2 commit f47a59d6
*Port 'Initialize variables' fix from KexiDB 2, commit 8600a381ebfd296

2011-02-04
Predicate
*Fix Solaris build in the parser
**BUG:265349

2010-12-30..2011-01-31
Predicate
*(*Expr) classes renamed to *Expression
*expression classes put into enum
*Expression attributes made private, improved related includes (QuerySchemaParameter)
*convenience includes added, now it's possible to use #include <Predicate/Connection>
*Unit test for Expression class added
TODO: add tests for the other Expression* classes

2010-12-17
Predicate
*build system: use Predicate_SOURCE_DIR, Predicate_BINARY_DIR for clarity; generate predicate.pc and install it, append git hash to PREDICATE_VERSION_STRING
2010-12-16
Predicate
*fix memory leak in Connection::insertRecord: Conditional jump or move depends on uninitialised value(s)
*add missing "return dbg.space();" to QDebug operator<<(QDebug dbg, ..), otherwise crashes
PostgreSQL Driver
*fix building connection string, remove crash on closing database
*'tables' test passed

2010-12-15
Predicate
*Added Connection::drv_getServerVersion() and moved getting server version here from drv_connect() so PostgreSQL driver also can get version properly

2010-12-12
Moved to git: https://projects.kde.org/projects/playground/libs/predicate/repository

2010-12-03
Predicate
*RecordData is internally a low-level array of QVector pointers now, this adds speed and size optimizations; null values are null pointers there; more optimization planned (replacing QVariant since implicit sharing of values is not needed)

2010-11-03..2010-11-16
Predicate
*EscapedString introduced: specialized string for escaping. In addition to byte array, contains "validity" flag that is transferred when strings are concatenated or in general when any operation with invalid escaped string is performed.
*SQLite, MySQL, PostgreSQL Ported to EscapedString-based API

2010-10-30..2010-11-03
PostgreSQL Driver
*DriverBehaviour::QUOTATION_MARKS_FOR_IDENTIFIER changed from QChar to char
*option EscapeKexi in escape*() methods replaced by providing Predicate::escapeIdentifier() and Predicate::escapeString() functions
Predicate
*ConnectionData now contains optional databaseName attribute, so it is not needed to pass the name in useDatabase() (useful e.g. for SQLite)
*escaping is now based on Connection, not Driver (NOTE: string escaping hints: http://pastebin.com/Lagyyfj7)
*constness improved in the API
*use QString(char) when possible (small optimization)

2010-10-20
PostgreSQL Driver
*development of PostgreSQL driver based on libpq started, total rewrite of the 'pqxx' driver
Predicate
*add sanity checks to assignment operators
*add explicit ctors
*added BOOLEAN_TRUE_LITERAL, BOOLEAN_FALSE_LITERAL to DriverBehaviour, 1/0 by default, PostgreSQL driver changes them to TRUE/FALSE
SQLite Driver
*renamed from sqlite3 to sqlite for simplicity

2010-10-18
MySQL
*MySQL connections work again
*server supported by predicatefeaturestest: added -h option for host, -u for user, -p for password
**e.g. predicatefeaturestest --test tables -h myhost.com -u root -p pass mysql testdb

2010-10-17
DriverManager
*driversForMimeType() added
*driversInfo() removed as redundant

2010-10-13
*Port MySQL and SQLite drivers to the new API; some updates in other drivers but no tests

2010-09-05
*SDC
**added "operator==" option for generating operator== (deep comparison)

2010-08-19..21
*SDC
**properly generates code for more than one shared class per file
**add "#include <QSharedData>" is needed
*remaining bits: replaced KexiDB with Predicate
*Cursor, Driver and Connection no longer inherit QObject

2010-08-18
* replaced usage of 'row' term with 'record' in most places, e.g. Cursor::storeCurrentRow -> Cursor::storeCurrentRecord and RowEditBuffer with RecordEditBuffer, LookupFieldSchema::RowSource -> LookupFieldSchema::RecordSource

2010-08-06
*SDC
**added "namespace" option (string) for shared class, used in 
TODO: document SDC options

2010-08-05
*SDC
**added "with_from_to_map" option for shared class, generates extra methods as <file>_sdc.cpp:
***QMap<QString, QString> CLASSNAME::toMap() const;
***CLASSNAME(const QMap<QString, QString>& map, bool* ok);

2010-08-04
*SDC
**added support for protected option for data_member
**added support for "#if 0" blocks

2010-08-03
*ConnectionData is shared class (using SDC)

2010-07-21
*introducted Shared Data Compiler tool for creating implicitly shared classes
*introducted Result class using SDC, obsoletes Predicate::Object
**introducted Resultable helper

2010-07-18
*merge kexidb r1151238
*SQLite Driver: remove all sqlite_* macros, use sqlite3_* functions directly since we only support version 3
**use sqlite3_close() on sqlite3 structure instead of free(3)
***possible fix of crash in bug #245030

2010-07-08
*clean up the .desktop file format for drivers
**sqlite driver ported to that
*QT_PLUGIN_DIR is used to find predicate/ dir with drivers
*fix library version to 1.0.0
*all the drivers desktop files ported to the new plugin system
*use system sqlite

2010-05-10
*merge kexidb r1125175
*[security] SQLite: Set the secure-delete on, so SQLite overwrites deleted content with zeros. Works with 3.6.23. Earlier versions just ignore this pragma. See http://www.sqlite.org/pragma.html#pragma_secure_delete
TODO: add connection flags to the driver and global setting to control the "secure delete" pragma

2010-04-28
*merge kexidb r1119294
**MySQL Driver: Fix "DB created but cannot open" error appearing on creating a new database for mysql backend.
  See http://dev.mysql.com/doc/refman/5.0/en/identifier-case-sensitivity.html (complex!) for logic of otherwise simple thing.
  The solution is to execute SHOW VARIABLES LIKE 'lower_case_table_name' to get the flag and make the table and database names lowercase if needed.

2010-04-24
*merge kexidb r1116241:
**fix possible crash when adding two or more new columns to a table at once
**BUG:234194
**rename typedefs to use Const when needed

2010-01-31
SQLite (merged with kexidb)
*kexisql updated to 3.6.22
**we're still embedding sqlite in Kexi because of many options that are not set in distros, e.g. SECURE DELETE should be on by default http://sqlite.org/compile.html#secure_delete
**moved to amalgamation version for efficiency http://sqlite.org/amalgamation.html - makes it run faster
**moved directly to the SQLite driver - even more efficiency
**SQlite: "use database" operation no longer attempts to create new database if missing

2010-01-26
Queries (merged with kexidb)
*fixed memory ownership issues with data structures for ORDER BY in select queries
**this fixes generation of ORDER BY section of SQL statements
*improved debug of ORDER BY columns

2009-11-21
General
*merged with kexidb from KOffice trunk
*added versioning in the driver plugins using version_* symbols
*improved formatting
